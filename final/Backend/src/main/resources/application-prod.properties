spring.application.name=final
server.servlet.context-path=/api
server.port=8080
server.address=0.0.0.0
# jpa 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# SQL ??? ???? ??? JPA ??? ?? ??? ??
spring.jpa.defer-datasource-initialization=true

# MySQL DB 설정
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:ssafytrip}?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME:ssafy}
spring.datasource.password=${DB_PASSWORD:ssafy}
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

# 파일 업로드 관련 설정
file.dir=C:/uploads/
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/static/**

jwt.secret=${JWT_KEY}
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:8080}
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs

# ??sql ?? ? ?? ??? ??
spring.sql.init.mode=always
spring.sql.init.encoding=UTF-8
spring.sql.init.schema-locations=classpath:PENET_Schema.sql
spring.sql.init.data-locations=classpath:PENET_Dump.sql

# OpenAI API ?
spring.ai.openai.api-key=${API_KEY}
# ?? ??
spring.ai.openai.chat.options.model=gpt-4o-mini
spring.ai.openai.chat.options.temperature=0.7