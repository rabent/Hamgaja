services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: spring-backend
    volumes:
      - gradle-cache:/root/.gradle  # Gradle 캐시 볼륨
    restart: unless-stopped
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - JWT_KEY=${JWT_KEY}
      - API_KEY=${API_KEY}
      # 필요한 환경변수 추가 (DB 설정 등)
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend/final-front
    container_name: vue-frontend
    restart: unless-stopped
    ports:
      - "8080:8080"  # 외부 8080 포트를 컨테이너 80 포트에 매핑
    volumes:
      - ./frontend/final-front/nginx.conf:/etc/nginx/nginx.conf # Nginx 설정 마운트
    depends_on:
      - backend
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network

volumes:
  gradle-cache:  # 도커 관리 볼륨 정의

networks:
  app-network:
    driver: bridge